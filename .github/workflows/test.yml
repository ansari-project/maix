name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_ENV: test
  CI: true

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup test environment for unit tests
        run: |
          cp .env.test.example .env.test
          # Use a mock database URL for unit tests (not used, but prevents Prisma errors)
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/maix_test_mock" >> .env.test
      
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: Run unit tests
        run: npm test
      
      - name: Check for overmocking
        run: |
          MOCK_COUNT=$(grep -r "jest.mock" src --include="*.test.ts" | wc -l)
          echo "Found $MOCK_COUNT mocks in tests"
          if [ $MOCK_COUNT -gt 50 ]; then
            echo "⚠️ Warning: High mock count. Consider more integration tests."
          fi

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: maix_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup test environment
        run: |
          cp .env.test.example .env.test
          # Override with CI database URL
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/maix_test" >> .env.test
      
      - name: Generate Prisma Client
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/maix_test
        run: npx prisma generate
      
      - name: Run Prisma migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/maix_test
        run: npx prisma migrate deploy
      
      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/maix_test
        run: npm run test:integration
      
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/

  build:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: TypeScript check
        run: npx tsc --noEmit --project tsconfig.build.json
      
      - name: Build application
        run: npm run build
      
      - name: Validate Prisma schema
        run: npx prisma validate

  # Optional: Neon-specific integration tests (commented out to save costs)
  # neon-integration-tests:
  #   name: Neon Integration Tests
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   
  #   steps:
  #     - uses: actions/checkout@v4
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #     
  #     - name: Install dependencies
  #       run: npm ci
  #     
  #     - name: Run integration tests against Neon
  #       env:
  #         DATABASE_URL: ${{ secrets.NEON_TEST_DATABASE_URL }}
  #       run: |
  #         npx prisma migrate deploy
  #         npm run test:integration